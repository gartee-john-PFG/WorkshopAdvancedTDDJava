/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package integerSort;

import com.google.common.collect.Lists;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class IntegerSortTests {
    @Test
    void sortTest() {
        List<Integer> emptyList = Lists.newArrayList();
        List<Integer> singleItemList = Lists.newArrayList(1);
        //  1,2 will already pass...need a failing test
        List<Integer> twoOutOfOrderList = Lists.newArrayList(2, 1);
        //  swapping first pair will already pass...need the smallest in the last position
        List<Integer> threeReverseOrderList = Lists.newArrayList(3, 2, 1);

        assertEquals(Lists.newArrayList(), new IntegerSort().sort(emptyList));
        assertEquals(Lists.newArrayList(1), new IntegerSort().sort(singleItemList));
        assertEquals(Lists.newArrayList(1, 2), new IntegerSort().sort(twoOutOfOrderList));
        assertEquals(Lists.newArrayList(1, 2, 3), new IntegerSort().sort(threeReverseOrderList));

        List<Integer> unsortedLarge = getList(50000);
        List<Integer> sortedLarge = new IntegerSort().sort(unsortedLarge);


        for (int i = 0; i < unsortedLarge.size() - 1; i++) {
            assertTrue(sortedLarge.get(i) <= sortedLarge.get(i + 1));
        }
    }

    private List<Integer> getList(int size) {
        List<Integer> newList = new ArrayList<>();

        for (int i = 0; i < size; i++) {
            newList.add((int) (Math.random() * 10000));
        }

        return newList;
    }
}
